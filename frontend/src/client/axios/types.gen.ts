// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
    grant_type?: string | null;
    username: string;
    password: string;
    scope?: string;
    client_id?: string | null;
    client_secret?: string | null;
};

export type FileCreate = {
    name: string;
    access_key: string;
    size?: number | null;
};

export type FilePublic = {
    name: string;
    access_key: string;
    size: number;
    created_at?: string | null;
    updated_at?: string | null;
    id: number;
    owner_id: number;
};

export type FileUpdate = {
    name?: string | null;
    access_key?: string | null;
    size?: number | null;
};

export type FilesPublic = {
    data: Array<FilePublic>;
    count: number;
};

export type HTTPValidationError = {
    detail?: Array<ValidationError>;
};

export type Message = {
    message: string;
};

export type Token = {
    access_token: string;
    token_type?: string;
};

export type UpdatePassword = {
    current_password: string;
    new_password: string;
};

export type UserCreate = {
    email: string;
    password: string;
};

export type UserPublic = {
    email: string;
    created_at?: string | null;
    updated_at?: string | null;
    id: number;
};

export type UserUpdate = {
    email?: string | null;
};

export type ValidationError = {
    loc: Array<(string | number)>;
    msg: string;
    type: string;
};

export type LoginLoginAccessTokenData = {
    formData: Body_login_login_access_token;
};

export type LoginLoginAccessTokenResponse = Token;

export type LoginTestTokenResponse = UserPublic;

export type FilesCreateFileData = {
    requestBody: FileCreate;
};

export type FilesCreateFileResponse = FilePublic;

export type FilesReadFilesData = {
    limit?: number;
    skip?: number;
};

export type FilesReadFilesResponse = FilesPublic;

export type FilesReadFileData = {
    fileId: number;
};

export type FilesReadFileResponse = FilePublic;

export type FilesUpdateFileData = {
    fileId: number;
    requestBody: FileUpdate;
};

export type FilesUpdateFileResponse = FilePublic;

export type FilesDeleteFileData = {
    fileId: number;
};

export type FilesDeleteFileResponse = Message;

export type UsersRegisterUserData = {
    requestBody: UserCreate;
};

export type UsersRegisterUserResponse = UserPublic;

export type UsersReadUserMeResponse = UserPublic;

export type UsersDeleteUserMeResponse = Message;

export type UsersUpdateUserMeData = {
    requestBody: UserUpdate;
};

export type UsersUpdateUserMeResponse = UserPublic;

export type UsersUpdatePasswordMeData = {
    requestBody: UpdatePassword;
};

export type UsersUpdatePasswordMeResponse = Message;

export type $OpenApiTs = {
    '/api/v1/login/access-token': {
        post: {
            req: LoginLoginAccessTokenData;
            res: {
                /**
                 * Successful Response
                 */
                200: Token;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/api/v1/login/test-token': {
        post: {
            res: {
                /**
                 * Successful Response
                 */
                200: UserPublic;
            };
        };
    };
    '/api/v1/files/': {
        post: {
            req: FilesCreateFileData;
            res: {
                /**
                 * Successful Response
                 */
                200: FilePublic;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
        get: {
            req: FilesReadFilesData;
            res: {
                /**
                 * Successful Response
                 */
                200: FilesPublic;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/api/v1/files/{file_id}': {
        get: {
            req: FilesReadFileData;
            res: {
                /**
                 * Successful Response
                 */
                200: FilePublic;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
        put: {
            req: FilesUpdateFileData;
            res: {
                /**
                 * Successful Response
                 */
                200: FilePublic;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
        delete: {
            req: FilesDeleteFileData;
            res: {
                /**
                 * Successful Response
                 */
                200: Message;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/api/v1/users/register': {
        post: {
            req: UsersRegisterUserData;
            res: {
                /**
                 * Successful Response
                 */
                200: UserPublic;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/api/v1/users/me': {
        get: {
            res: {
                /**
                 * Successful Response
                 */
                200: UserPublic;
            };
        };
        delete: {
            res: {
                /**
                 * Successful Response
                 */
                200: Message;
            };
        };
        patch: {
            req: UsersUpdateUserMeData;
            res: {
                /**
                 * Successful Response
                 */
                200: UserPublic;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
    '/api/v1/users/me/password': {
        patch: {
            req: UsersUpdatePasswordMeData;
            res: {
                /**
                 * Successful Response
                 */
                200: Message;
                /**
                 * Validation Error
                 */
                422: HTTPValidationError;
            };
        };
    };
};