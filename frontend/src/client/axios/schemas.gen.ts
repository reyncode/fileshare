// This file is auto-generated by @hey-api/openapi-ts

export const $Body_login_login_access_token = {
    properties: {
        grant_type: {
            anyOf: [
                {
                    type: 'string',
                    pattern: 'password'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Grant Type'
        },
        username: {
            type: 'string',
            title: 'Username'
        },
        password: {
            type: 'string',
            title: 'Password'
        },
        scope: {
            type: 'string',
            title: 'Scope',
            default: ''
        },
        client_id: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Client Id'
        },
        client_secret: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Client Secret'
        }
    },
    type: 'object',
    required: ['username', 'password'],
    title: 'Body_login-login_access_token'
} as const;

export const $FileCreate = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        access_key: {
            type: 'string',
            title: 'Access Key'
        },
        size: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Size',
            default: 0
        }
    },
    type: 'object',
    required: ['name', 'access_key'],
    title: 'FileCreate'
} as const;

export const $FilePublic = {
    properties: {
        name: {
            type: 'string',
            title: 'Name'
        },
        access_key: {
            type: 'string',
            title: 'Access Key'
        },
        size: {
            type: 'integer',
            title: 'Size'
        },
        created_at: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Created At'
        },
        updated_at: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updated At'
        },
        id: {
            type: 'integer',
            title: 'Id'
        },
        owner_id: {
            type: 'integer',
            title: 'Owner Id'
        }
    },
    type: 'object',
    required: ['name', 'access_key', 'size', 'id', 'owner_id'],
    title: 'FilePublic'
} as const;

export const $FileUpdate = {
    properties: {
        name: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Name'
        },
        access_key: {
            anyOf: [
                {
                    type: 'string'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Access Key'
        },
        size: {
            anyOf: [
                {
                    type: 'integer'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Size',
            default: 0
        }
    },
    type: 'object',
    title: 'FileUpdate'
} as const;

export const $FilesPublic = {
    properties: {
        data: {
            items: {
                '$ref': '#/components/schemas/FilePublic'
            },
            type: 'array',
            title: 'Data'
        },
        count: {
            type: 'integer',
            title: 'Count'
        }
    },
    type: 'object',
    required: ['data', 'count'],
    title: 'FilesPublic'
} as const;

export const $HTTPValidationError = {
    properties: {
        detail: {
            items: {
                '$ref': '#/components/schemas/ValidationError'
            },
            type: 'array',
            title: 'Detail'
        }
    },
    type: 'object',
    title: 'HTTPValidationError'
} as const;

export const $Message = {
    properties: {
        message: {
            type: 'string',
            title: 'Message'
        }
    },
    type: 'object',
    required: ['message'],
    title: 'Message'
} as const;

export const $Token = {
    properties: {
        access_token: {
            type: 'string',
            title: 'Access Token'
        },
        token_type: {
            type: 'string',
            title: 'Token Type',
            default: 'bearer'
        }
    },
    type: 'object',
    required: ['access_token'],
    title: 'Token'
} as const;

export const $UpdatePassword = {
    properties: {
        current_password: {
            type: 'string',
            title: 'Current Password'
        },
        new_password: {
            type: 'string',
            title: 'New Password'
        }
    },
    type: 'object',
    required: ['current_password', 'new_password'],
    title: 'UpdatePassword'
} as const;

export const $UserCreate = {
    properties: {
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        password: {
            type: 'string',
            title: 'Password'
        }
    },
    type: 'object',
    required: ['email', 'password'],
    title: 'UserCreate'
} as const;

export const $UserPublic = {
    properties: {
        email: {
            type: 'string',
            format: 'email',
            title: 'Email'
        },
        created_at: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Created At'
        },
        updated_at: {
            anyOf: [
                {
                    type: 'string',
                    format: 'date-time'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Updated At'
        },
        id: {
            type: 'integer',
            title: 'Id'
        }
    },
    type: 'object',
    required: ['email', 'id'],
    title: 'UserPublic'
} as const;

export const $UserUpdate = {
    properties: {
        email: {
            anyOf: [
                {
                    type: 'string',
                    format: 'email'
                },
                {
                    type: 'null'
                }
            ],
            title: 'Email'
        }
    },
    type: 'object',
    title: 'UserUpdate'
} as const;

export const $ValidationError = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: 'string'
                    },
                    {
                        type: 'integer'
                    }
                ]
            },
            type: 'array',
            title: 'Location'
        },
        msg: {
            type: 'string',
            title: 'Message'
        },
        type: {
            type: 'string',
            title: 'Error Type'
        }
    },
    type: 'object',
    required: ['loc', 'msg', 'type'],
    title: 'ValidationError'
} as const;